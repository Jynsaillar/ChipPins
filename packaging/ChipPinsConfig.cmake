cmake_minimum_required(VERSION 3.14)

set(ChipPins_known_comps static shared)
set(ChipPins_comp_static NO)
set(ChipPins_comp_shared NO)
foreach (ChipPins_comp IN LISTS ${CMAKE_FIND_PACKAGE_NAME}_FIND_COMPONENTS)
    if (ChipPins_comp IN_LIST ChipPins_known_comps)
        set(ChipPins_comp_${ChipPins_comp} YES)
    else ()
        set(${CMAKE_FIND_PACKAGE_NAME}_NOT_FOUND_MESSAGE
            "ChipPins does not recognize component `${ChipPins_comp}`.")
        set(${CMAKE_FIND_PACKAGE_NAME}_FOUND FALSE)
        return()
    endif ()
endforeach ()

if (ChipPins_comp_static AND ChipPins_comp_shared)
    set(${CMAKE_FIND_PACKAGE_NAME}_NOT_FOUND_MESSAGE
        "ChipPins `static` and `shared` components are mutually exclusive.")
    set(${CMAKE_FIND_PACKAGE_NAME}_FOUND FALSE)
    return()
endif ()

set(ChipPins_static_targets "${CMAKE_CURRENT_LIST_DIR}/ChipPins-static-targets.cmake")
set(ChipPins_shared_targets "${CMAKE_CURRENT_LIST_DIR}/ChipPins-shared-targets.cmake")

macro(ChipPins_load_targets type)
    if (NOT EXISTS "${ChipPins_${type}_targets}")
        set(${CMAKE_FIND_PACKAGE_NAME}_NOT_FOUND_MESSAGE
            "ChipPins `${type}` libraries were requested but not found.")
        set(${CMAKE_FIND_PACKAGE_NAME}_FOUND FALSE)
        return()
    endif ()
    include("${ChipPins_${type}_targets}")
endmacro()

if (ChipPins_comp_static)
    ChipPins_load_targets(static)
elseif (ChipPins_comp_shared)
    ChipPins_load_targets(shared)
elseif (DEFINED ChipPins_SHARED_LIBS AND ChipPins_SHARED_LIBS)
    ChipPins_load_targets(shared)
elseif (DEFINED ChipPins_SHARED_LIBS AND NOT ChipPins_SHARED_LIBS)
    ChipPins_load_targets(static)
elseif (BUILD_SHARED_LIBS)
    if (EXISTS "${ChipPins_shared_targets}")
        ChipPins_load_targets(shared)
    else ()
        ChipPins_load_targets(static)
    endif ()
else ()
    if (EXISTS "${ChipPins_static_targets}")
        ChipPins_load_targets(static)
    else ()
        ChipPins_load_targets(shared)
    endif ()
endif ()
